body:
  shape: rectangle
  dynamic: unicycle_2nd
  goal_mode: center
  length: 0.03
  width: 0.1
  start_state: [0.1, 0.7, -0.1, 0.0, 0.0]
  goal_state: [0.1, 0.3, 0.5, 0.0, 0.0]
  control_bounds:
    - [-2.0,  2.0]
    - [-3.0,  3.0]

obstacles:
  - type: polygon
    points:
      - [-0.2, 0.0]
      - [-0.2, 1.1]
      - [0.0, 1.1]
      - [0.0, 0.0]
    margin: 0.00
  - type: polygon
    points:
      - [0.0, 1.1]
      - [1.1, 1.1]
      - [1.1, 1.0]
      - [0.0, 1.0]
    margin: 0.00
  - type: polygon
    points:
      - [1.0, 1.0]
      - [1.1, 1.0]
      - [1.1, 0.0]
      - [1.0, 0.0]
  - type: polygon
    points:
      - [-0.2, -0.1]
      - [-0.2, 0.0]
      - [1.1, 0.0]
      - [1.1, -0.1]
    margin: 0.00
  - type: polygon
    points:
      - [0.0, 0.45]
      - [0.0, 0.55]
      - [0.55, 0.55]
      - [0.55, 0.45]
    margin: 0.00


solver:
  N: 80
  dt: 0.05
  use_slack: true
  slack_penalty: 80
  use_smooth:  false 
  smooth_weight: 0.5
  mode: l4casadi
  initializer:
    - mode: rrt
      rrt_bounds:
        - [-0.0, -0.0]
        - [1.3, 1.3]
      step_size: 0.02
      max_iter: 5000
      margin: 0.0
    #- mode: default #linear
  enforce_heading: false # enforce theta = theta_goal
  type: ipopt

model:
  type: mlp  # options: siren, fourier, mlp
  hidden_dim: 128
  num_hidden_layers: 2
  activation_function: ReLU  # ignore for siren and fourier
  omega_0: 30                # used only for siren
  surface_loss_weight: 1.0
  eikonal_loss_weight: 0.01